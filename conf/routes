# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET           /assets/javascript/routes.js                                   controllers.Application.jsRoutes

GET           /feedback/:id                                                  controllers.FeedbackManagement.fetchPopupQSurvey(id: Long)

GET           /logout                                                        com.feth.play.module.pa.controllers.Authenticate.logout
GET           /authenticate/:provider                                        com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)

GET           /accounts/unverified                                           controllers.Signup.unverified
GET           /authenticate/:provider/denied                                 controllers.Signup.oAuthDenied(provider: String)

GET           /accounts/verify/:token                                        controllers.Signup.verify(token: String)
GET           /accounts/exists                                               controllers.Signup.exists
GET           /accounts/afterLogin                                           controllers.AuthController.afterLogin
GET           /accounts/afterAuth                                            controllers.AuthController.afterAuth

GET           /accounts/password/change                                      controllers.Account.changePassword
POST          /accounts/password/change                                      controllers.Account.doChangePassword

GET           /accounts/verify                                               controllers.Account.verifyEmail

GET           /login/password/forgot                                         controllers.Signup.forgotPassword(email: String ?= "")
POST          /login/password/forgot                                         controllers.Signup.doForgotPassword

# Views used be angular routes
GET           /views/home                                                    controllers.Application.home
GET           /views/about                                                   controllers.Application.about
GET           /views/terms                                                   controllers.Application.terms
GET           /views/privacy                                                 controllers.Application.privacy
GET           /views/search                                                  controllers.Application.search
GET           /views/creator                                                 controllers.Application.creator
GET           /views/perk                                                    controllers.Application.perk
GET           /views/how-it-works                                            controllers.Application.how_it_works
GET           /views/FAQs                                                    controllers.Application.faq
GET           /views/dashboard                                               controllers.Application.dashboard
GET           /views/dashboard/products                                      controllers.Application.dashboard_products
GET           /views/dashboard/products/info                                 controllers.Application.dashboard_products_info
GET           /views/dashboard/products/analytics                            controllers.Application.dashboard_products_analytics
GET           /views/dashboard/products/users                                controllers.Application.dashboard_products_users
GET           /views/dashboard/products/feedback                             controllers.Application.dashboard_products_feedback
GET           /views/profile                                                 controllers.Application.profile
GET           /views/profile/photos                                          controllers.Application.profile_photos
GET           /views/profile/videos                                          controllers.Application.profile_videos
GET           /views/profile/products                                        controllers.Application.profile_products
GET           /views/profile/followers                                       controllers.Application.profile_followers
GET           /views/profile/followings                                      controllers.Application.profile_followings
GET           /views/profile/account                                         controllers.Application.profile_account
GET           /views/product-list                                            controllers.Products.list
GET           /views/product-add                                             controllers.Products.add
GET           /views/product-details                                         controllers.Products.details
GET           /views/product-about                                           controllers.Products.about
GET           /views/product-bar                                             controllers.Products.bar
GET           /views/product-gallery                                         controllers.Products.gallery

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                                  controllers.Assets.at(path="/public", file)
GET           /webjars/*file                                                 controllers.WebJarAssets.at(file)

# Web Service
#GET           /api/users                             controllers.UserController.getUsers
GET           /api/users/:nickname                                           controllers.UserController.getUser(nickname: String)
#POST          /api/users                             controllers.UserController.createUser
POST          /api/users/:nickname                                           controllers.UserController.updateUser(nickname: String)
PUT           /api/users/:nickname                                           controllers.UserController.updateUser(nickname: String)
#DELETE        /api/users/:id                         controllers.UserController.deleteUser(id: Long)

POST          /api/suggest/product                                           controllers.Application.addProductSuggestion
POST          /api/creator/access                                            controllers.Application.addEarlyAccessRequest

GET           /api/trials                                                    controllers.TrialController.getall
GET           /api/trials/:id                                                controllers.TrialController.get(id: Long)
POST          /api/trials                                                    controllers.TrialController.create
PUT           /api/trials/:id                                                controllers.TrialController.update(id: Long)
POST          /api/trials/:id                                                controllers.TrialController.update(id: Long)
DELETE        /api/trials/:id                                                controllers.TrialController.delete(id: Long)

GET           /api/content                                                   controllers.ContentController.getall
GET           /api/content/:id                                               controllers.ContentController.get(id: Long)
POST          /api/content                                                   controllers.ContentController.create
PUT           /api/content/:id                                               controllers.ContentController.update(id: Long)
POST          /api/content/:id                                               controllers.ContentController.update(id: Long)
DELETE        /api/content/:id                                               controllers.ContentController.delete(id: Long)

GET           /api/products                                                  controllers.Products.getProducts
GET           /api/products/:slug                                            controllers.Products.getProduct(slug: String)
POST          /api/products                                                  controllers.Products.createProduct
PUT           /api/products/:slug                                            controllers.Products.updateProduct(slug: String)
POST          /api/products/:slug                                            controllers.Products.updateProduct(slug: String)
DELETE        /api/products/:id                                              controllers.Products.deleteProduct(id: Long)

GET           /api/company                                                  controllers.CompanyController.query
#GET           /api/company/:id                                              controllers.CompanyController.getCompany(id: Long)
POST          /api/company                                                  controllers.CompanyController.save
#PUT           /api/company/:id                                              controllers.CompanyController.save(id: Long)
#DELETE        /api/company/:id                                              controllers.CompanyController.deleteCompany(id: Long)


GET           /api/file/policy                                               controllers.FileController.authorize(contentHash: String , contentName: String, contentLength: Long, contentType: String, comment: String, refId: Long, refType: String)
POST          /api/file/verify                                               controllers.FileController.verify(uuid: String)
GET           /api/file/:type/:id                                            controllers.FileController.getFiles(id: Long, type: String)
GET           /api/file/user                                                 controllers.FileController.getUserFiles
POST          /api/file/avatar                                               controllers.FileController.addAvatar(uuid: String)

GET           /api/forum/posts                                               controllers.PostController.getPosts(prod: Long ?= -1, cat: Long ?= -1)
GET           /api/forum/posts/:id                                           controllers.PostController.getPost(id: Long)
POST          /api/forum/posts                                               controllers.PostController.addPost
#PUT     /api/forum/posts/:id        controllers.PostController.updateProduct(id: Long)
#DELETE  /api/forum/posts/:id        controllers.PostController.deleteProduct(id: Long)

GET           /api/tags/top                                                  controllers.TagController.getTopTags(size: Int ?= 10)
GET           /api/tags/post/top/:id/:category                               controllers.TagController.getPopularPostTags(id: Long, category: Int)

GET           /api/likes/:type/:id                                           controllers.LikesController.getLikes(id: Long, type: String)
POST          /api/likes/:type/:id                                           controllers.LikesController.addLikes(id: Long, type: String, user_id: Long)

GET           /api/follow/:type/:id                                          controllers.FollowController.isFollowing(id: Long, type: String)
POST          /api/follow/:type/:id                                          controllers.FollowController.follow(id: Long, type: String)
DELETE        /api/follow/:type/:id                                          controllers.FollowController.unfollow(id: Long, type: String)

GET           /api/facebook/:endpoint/posts                                  controllers.FacebookController.getPosts(endpoint: Long)

GET           /api/twitter/:productId/show                                   controllers.TwitterController.getUserShow(productId: Long)
GET           /api/twitter/:productId/search                                 controllers.TwitterController.getSearch(productId: Long)
GET           /api/twitter/statuses/user_timeline/:productId                 controllers.TwitterController.getUserTimeline(productId: Long)

GET           /api/auth/user                                                 controllers.AuthController.user
GET           /api/auth/logout                                               controllers.AuthController.logout
POST          /api/auth/login                                                controllers.AuthController.login
POST          /api/auth/signup                                               controllers.AuthController.signup
POST          /api/auth/provider/:provider                                   controllers.AuthController.provider(provider: String)

GET           /media/image/:w/x/:image                                       controllers.Application.image(image: String, w: Int, h: Int = -1)
GET           /media/image/x/:h/:image                                       controllers.Application.image(image: String, w: Int = -1, h: Int)
GET           /media/image/:w/:h/:image                                      controllers.Application.image(image: String, w: Int, h: Int)
GET           /media/image/:image                                            controllers.Application.image(image: String, w: Int ?=-1,        h:        Int ?=-1)

GET			  /api/campaign/getActive/:productId							 controllers.CampaignController.getActiveCampaign(productId: Long)
GET			  /api/campaign/getInfo/:productId								 controllers.CampaignController.getCampaignInfo(productId: Long)
POST		  /api/campaign/processShare									 controllers.CampaignController.processShare()	

# Internal Administration Only - Not visible to public
GET           /adminstuff                                            		 controllers.ReportAdminController.home()
GET           /adminstuff/product                                            controllers.ProductAdministrationController.index()
GET           /adminstuff/product/list                                       controllers.ProductAdministrationController.list(page: Integer ?= 0)
GET           /adminstuff/product/listTrials                                 controllers.ProductAdministrationController.listTrials(page: Integer ?= 0)
POST          /adminstuff/product/list                                       controllers.ProductAdministrationController.save()
GET           /adminstuff/product/new                                        controllers.ProductAdministrationController.newProduct()
GET           /adminstuff/product/:slug                                      controllers.ProductAdministrationController.details(slug: models.Product)
DELETE        /adminstuff/product/:id                                        controllers.ProductAdministrationController.delete(id: Long)
#GET  /adminstuff/product/picture/:ean         	controllers.ProductAdministrationController.picture(ean)

#GET   /adminstuff/company/uploadmedia    		controllers.MediaManagement.uploadCompanyMedia()
GET           /adminstuff/company/uploadmedia/:companyslug/:mediaType        controllers.MediaManagement.uploadCompanyMedia(companyslug : String, mediaType : String)
POST          /adminstuff/company/domediaupload                              controllers.MediaManagement.doCompanyMediaUpload()
GET           /adminstuff/uploadmedia                                        controllers.MediaManagement.upload()
POST          /adminstuff/doupload                                           controllers.MediaManagement.doUpload()
GET           /adminstuff/socialmediapost                                    controllers.SocialMediaPostAdminController.newPost()
POST          /adminstuff/dosocialmediapost                                  controllers.SocialMediaPostAdminController.save()

GET           /adminstuff/user                                            	 controllers.ReportAdminController.index()
GET           /adminstuff/user/list                                       	 controllers.ReportAdminController.userList(page: Integer ?= 0)
POST          /adminstuff/user/updateRole                  					 controllers.ReportAdminController.updateUserRole()
GET           /adminstuff/trial/list                                       	 controllers.ReportAdminController.trialList(page: Integer ?= 0)
GET           /adminstuff/influencer_trial/list                              controllers.ReportAdminController.influencerTrialList(page: Integer ?= 0)
POST          /adminstuff/influencer_trial/updateStatus                      controllers.ReportAdminController.updateTrialStatus()
GET           /adminstuff/suggest/list                                       controllers.ReportAdminController.suggestedProductList(page: Integer ?= 0)
GET           /adminstuff/campaign/list                                      controllers.CampaignController.list()
GET           /adminstuff/campaign/new                                       controllers.CampaignController.newCampaign()
POST          /adminstuff/campaign/save                                  	 controllers.CampaignController.save()
GET           /adminstuff/campaign/:id                                       controllers.CampaignController.details(id: Long)

# Mockups
GET           /mockups/product/:slug/about                                   controllers.MockupController.detailsAboutBySlug(slug: String)
GET           /mockups/product/:slug/bar                                     controllers.MockupController.detailsBarBySlug(slug: String)
GET           /mockups/product/:slug/gallery                                 controllers.MockupController.detailsGalleryBySlug(slug: String)
GET           /mockups/login                                                 controllers.MockupController.login()
GET           /mockups/signup                                                controllers.MockupController.signup()
GET           /mockups/forgot_password                                       controllers.MockupController.forgotPassword()
GET           /mockups/reset_password                                        controllers.MockupController.resetPassword()
GET           /mockups/user_profile                                          controllers.MockupController.userProfile()
GET           /mockups/dashboard                                             controllers.MockupController.creatorDashboard()
GET           /mockups/creator                                               controllers.MockupController.forCreator()
GET           /mockups/product_list                                          controllers.MockupController.productList()
GET           /mockups/user_settings                                         controllers.MockupController.userSettings()
GET           /mockups/new-product                                           controllers.MockupController.addNewProduct()
GET           /mockups/wizard                                                controllers.MockupController.wizard()
GET           /mockups/tryout                                                controllers.MockupController.tryout()
GET           /mockups/product_trials                                        controllers.MockupController.productTrials()
GET           /mockups/manage_content                                        controllers.MockupController.manageContent()
GET           /mockups/trial_status                                          controllers.MockupController.trialStatus()

# catch all. angular will handle all routes except /api/* /views/* /mockups/*
GET           /                                                              controllers.Application.main(any = "none")
GET           /about                                                         controllers.Application.main_about()
GET           /community                                                     controllers.Application.main_community()
GET           /creator             											 controllers.Application.main_creator()
GET           /news  														 controllers.Application.main_news()
GET           /privacy  													 controllers.Application.main_privacy()
GET           /terms  														 controllers.Application.main_terms()
GET           /product/:slug                                                 controllers.Application.main_product_about(slug: String)
GET           /product/:slug/about                                           controllers.Application.main_product_about(slug: String)
GET           /product/:slug/bar                                             controllers.Application.main_product_bar(slug: String)
GET           /product/:slug/gallery                                         controllers.Application.main_product_gallery(slug: String)
GET           /user/:nickname                                                controllers.Application.main_user(nickname: String)
GET           /*any                                                          controllers.Application.main(any)
